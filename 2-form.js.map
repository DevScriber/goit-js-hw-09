{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Обьявление обьекта formData и ключа для локального хранилища\nconst formData = { email: '', message: '' };\nconst localKey = 'userFeedbackData';\n\n// Получение ссылок на элементы формы\nconst form = document.querySelector('.feedback-form');\nconst inputEmail = form.querySelector('input[name=\"email\"]');\nconst textAreaMessage = form.querySelector('textarea[name=\"message\"]');\n\n// Загрузка сохраненных данных из локального хранилища\n\nlet cachedData;\ntry {\n  cachedData = JSON.parse(localStorage.getItem(localKey)) ?? {};\n} catch (error) {\n  cachedData = {};\n}\n\ninputEmail.value = cachedData.email || '';\nformData.email = cachedData.email || '';\ntextAreaMessage.value = cachedData.message || '';\nformData.message = cachedData.message || '';\n\n// Отслеживание изменений в форме с помощью события input\n\nform.addEventListener('input', event => {\n  const { name, value } = event.target;\n  formData[name] = value.trim();\n  localStorage.setItem(localKey, JSON.stringify(formData));\n});\n\n// Обработка события отправки формы\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  if (!formData.email || !formData.message) {\n    alert('Please complete all fields');\n    return;\n  }\n  console.log(formData);\n\n  localStorage.removeItem(localKey);\n  form.reset();\n  formData.email = '';\n  formData.message = '';\n});\n\n// Добавляем атрибуты классов для стилизации\n// Получаем ссылки на недостающие элементы формы\n\nconst labels = form.querySelectorAll('label');\nconst button = form.querySelector('button[type=\"submit\"]');\n\n// Добавление классов к элементам\nlabels.forEach(label => label.classList.add('feedback-form-label'));\ninputEmail.classList.add('feedback-form-input');\ntextAreaMessage.classList.add('feedback-form-input');\nbutton.classList.add('feedback-form-button');\n\n// Добавим placeholder при фокусе на полях\n\nfunction setPlaceholder(element, placeholderText) {\n  element.addEventListener('focus', function () {\n    this.setAttribute('placeholder', placeholderText);\n  });\n\n  element.addEventListener('blur', function () {\n    this.removeAttribute('placeholder');\n  });\n}\n\nsetPlaceholder(inputEmail, 'Type area');\nsetPlaceholder(textAreaMessage, 'Type area');\n"],"names":["formData","localKey","form","inputEmail","textAreaMessage","cachedData","event","name","value","labels","button","label","setPlaceholder","element","placeholderText"],"mappings":"wFACA,MAAMA,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EACnCC,EAAW,mBAGXC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAaD,EAAK,cAAc,qBAAqB,EACrDE,EAAkBF,EAAK,cAAc,0BAA0B,EAIrE,IAAIG,EACJ,GAAI,CACFA,EAAa,KAAK,MAAM,aAAa,QAAQJ,CAAQ,CAAC,GAAK,EAC7D,MAAgB,CACdI,EAAa,CAAA,CACf,CAEAF,EAAW,MAAQE,EAAW,OAAS,GACvCL,EAAS,MAAQK,EAAW,OAAS,GACrCD,EAAgB,MAAQC,EAAW,SAAW,GAC9CL,EAAS,QAAUK,EAAW,SAAW,GAIzCH,EAAK,iBAAiB,QAASI,GAAS,CACtC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9BN,EAASO,CAAI,EAAIC,EAAM,KAAI,EAC3B,aAAa,QAAQP,EAAU,KAAK,UAAUD,CAAQ,CAAC,CACzD,CAAC,EAIDE,EAAK,iBAAiB,SAAUI,GAAS,CAEvC,GADAA,EAAM,eAAc,EAChB,CAACN,EAAS,OAAS,CAACA,EAAS,QAAS,CACxC,MAAM,4BAA4B,EAClC,MACD,CACD,QAAQ,IAAIA,CAAQ,EAEpB,aAAa,WAAWC,CAAQ,EAChCC,EAAK,MAAK,EACVF,EAAS,MAAQ,GACjBA,EAAS,QAAU,EACrB,CAAC,EAKD,MAAMS,EAASP,EAAK,iBAAiB,OAAO,EACtCQ,EAASR,EAAK,cAAc,uBAAuB,EAGzDO,EAAO,QAAQE,GAASA,EAAM,UAAU,IAAI,qBAAqB,CAAC,EAClER,EAAW,UAAU,IAAI,qBAAqB,EAC9CC,EAAgB,UAAU,IAAI,qBAAqB,EACnDM,EAAO,UAAU,IAAI,sBAAsB,EAI3C,SAASE,EAAeC,EAASC,EAAiB,CAChDD,EAAQ,iBAAiB,QAAS,UAAY,CAC5C,KAAK,aAAa,cAAeC,CAAe,CACpD,CAAG,EAEDD,EAAQ,iBAAiB,OAAQ,UAAY,CAC3C,KAAK,gBAAgB,aAAa,CACtC,CAAG,CACH,CAEAD,EAAeT,EAAY,WAAW,EACtCS,EAAeR,EAAiB,WAAW"}